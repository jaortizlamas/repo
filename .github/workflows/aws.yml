
name: DeleteSecurityGroups

on:
  push:
    branches: [ "main" ]

env:
	tf_backend_container_name: terraformjaortiz
	tf_backend_tfstate_name: terraformjaortiz/terraform.tfstate
	tf_backend_region: eu-west-1
	AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
	AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
	AWS_DEFAULT_REGION: 'eu-west-1'
	PAT: ${{ secrets.TF_API_TOKEN }}

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: DeleteSecurityGroups
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        #Security groups no enlazado a interfaces
		(comm -23  <(aws ec2 describe-security-groups --query 'SecurityGroups[*].GroupId'  --output text | tr '\t' '\n'| sort) <(aws ec2 describe-network-interfaces --output text --query NetworkInterfaces[].Groups[].GroupId | tr -d '\r' | tr "\t" "\n" | sort | uniq)) > No_used_security_groups.txt
		#Security gruops no enlazados a interfaces quitando el de por defecto
		(comm -23  No_used_security_groups.txt <(aws ec2 describe-security-groups --filter  Name=group-name,Values=default --query 'SecurityGroups[*].[GroupId]' --output text | tr '\t' '\n'| sort)) > No_used_security_groups_without_default.txt
		#Bucle borrado security-groups no usados
		for id in cat No_used_security_groups_without_default.txt ; do echo $id ; aws ec2 delete-security-group --group-id $id; done
		#Borrado de archivos
		rm No_used_security_groups.txt
		rm No_used_security_groups_without_default.txt
